@model BankingAdminApp.ViewModels.AccountViewModel

@{
    ViewData["Title"] = "Account Details";
}

<h4>@ViewData["Title"]</h4>
<hr />

<dl class="row" style="color:gray">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.account_number)
    </dt>
    <dd class="col-sm-10">
        : @Html.DisplayFor(model => model.account_number)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.id_number)
    </dt>
    <dd class="col-sm-10">
        : @Html.DisplayFor(model => model.id_number)
    </dd>
</dl>
<h5>Update Account Details</h5>
<hr />

<div class="row">
    <span class="help-block">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </span>
    <div class="col-md-12">
        <form asp-action="Details">
            <input type="hidden" asp-for="code" />
            <input type="hidden" asp-for="person_code" />
            <input type="hidden" asp-for="id_number" />
            <div class="row">
                <div class="form-group col-md-4">
                    <label asp-for="account_number" class="control-label required"></label>
                    <input asp-for="account_number" class="form-control " />
                    <span asp-validation-for="account_number" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <input id="btnSubmit" type="button" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Details" asp-controller="Persons" asp-route-code="@Model.person_code">Back to Person Details</a>
</div>
<br />
<h4>Transactions</h4>
<hr />

@if (Convert.ToBoolean(Model.is_active))
{
    <p>
        <a asp-action="Create" asp-controller="Transactions" asp-route-code="@Model.code">Create New</a>
    </p>
}

<partial name="_TransactionList.cshtml" for="@Model.transactions">


    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }

        <script>
            $('#btnSubmit').on('click', function(e) {
                var form = $(this).parents('form');
                form.validate();
                if (form.valid()) {
                    form.submit();
                }
            });

            $(document).ready(function() {
                if ('@TempData["UpdateAccountSuccess"]' != "") {
                    Swal.fire({
                        icon: 'success',
                        title: "Successfully Updated!",
                        text: '@TempData["UpdateAccountSuccess"]',
                    })
                }
                if ('@TempData["TransactionCreateSuccess"]' != "") {
                    Swal.fire({
                        icon: 'success',
                        title: "Successfully Created!",
                        text: '@TempData["TransactionCreateSuccess"]',
                    })
                }
            });


            //Datatable
            $(function() {
                // JSON data
                var chartDataUrl = '@Url.Action("tableJsonData", "Tables")';

                $('#displayTable').dataTable({
                    dom: "<'row'<'col-sm-4'l><'col-sm-4 text-center'B><'col-sm-4'f>>tp",
                    "order": [[2, "desc"]],
                    responsive: true,
                    buttons: [
                        { extend: 'copy', className: 'btn-sm' },
                        { extend: 'csv', title: 'Transactions', className: 'btn-sm', exportOptions: { columns: 'th:not(:last-child)' } },
                        { extend: 'pdf', title: 'Transactions', className: 'btn-sm', exportOptions: { columns: 'th:not(:last-child)' } },
                        { extend: 'print', className: 'btn-sm', exportOptions: { columns: 'th:not(:last-child)' } }
                    ],

                    columnDefs: [
                        { "orderable": false, "targets": [4] },
                        { "searchable": false, "targets": [2, 4] }
                    ]
                });
            });

        </script>
    }
