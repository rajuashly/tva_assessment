@using BankingAdminApp.Helpers
@model IEnumerable<BankingAdminApp.DataLayer.EntityClasses.Persons>
@inject Microsoft.Extensions.Options.IOptions<CryptoEngine.Secrets> config

@{
    ViewData["Title"] = "Index";

}

<h4>Persons</h4>
<hr />
<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="table-responsive">
    <table id="displayTable" class="table table-striped" width="100%">
        <thead>
            <tr>
                <th>
                    Surname
                </th>
                <th>
                    Name
                </th>
                <th>
                    ID Number
                </th>
                <th>Accounts</th>
                <th width="15%">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var values = $"code={item.code}";
                var accounts = item.Accounts.Select(x => x.account_number).ToList();
                <tr>
                    <td>
                        @if (!string.IsNullOrWhiteSpace(item.surname))
                        {
                            @Html.DisplayFor(modelItem => item.surname)
                        }
                        else
                        {
                            <i style="color:gray">n/a</i>
                        }
                    </td>

                    <td>
                        @if (!string.IsNullOrWhiteSpace(item.name))
                        {
                            @Html.DisplayFor(modelItem => item.name)
                        }
                        else
                        {
                            <i style="color:gray">n/a</i>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.id_number)
                    </td>
                    <td>
                        @if (item.Accounts != null && item.Accounts.Count() > 0)
                        {
                            @Html.DropDownListFor(modelItem => item.Accounts, new SelectList(item.Accounts, "account_number","account_number"), new { @class="form-control"})
                        }
                        else
                        {
                            <i style="color:gray">No accounts</i>
                        }
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-secret="@CryptoEngine.Encrypt(values, config.Value.Key)" class="btn btn-sm btn-info"><i class="fa fa-eye"></i> View</a>

                        @if (item.Accounts.Where(x => x.is_active).Count() == 0)
                        {
                            <button class="btn btn-danger btn-sm" onclick="return deletePerson(this, '@item.code', '@item.id_number')"><i class="fa fa-trash"></i> Delete</button>
                        }
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
<script type="text/javascript">
    $(document).ready(function() {
        if ('@TempData["DeletePersonSuccess"]' != "") {
            Swal.fire({
                icon: 'success',
                title: "Successfully Deleted!",
                text: '@TempData["DeletePersonSuccess"]',
            })
        }
        if ('@TempData["DeletePersonFailure"]' != "") {
            Swal.fire({
                title: "Failed to delete person",
                text: '@TempData["DeletePersonFailure"]',
                icon: 'error',
            })
        }
        if ('@TempData["CreatePersonSuccess"]' != "") {
            Swal.fire({
                icon: 'success',
                title: "Person Successfully Created!",
                text: '@TempData["CreatePersonSuccess"]',
            })
        }
    });


    function deletePerson(elmnt, id, name) {
        Swal.fire({
            title: "Delete",
            text: "Are you sure you want to delete " + name + "?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: "No",
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value) {
                window.location.href = "/Persons/Delete/" + id;
            }
        })
    }

    //Datatable
    $(function() {
        // JSON data
        var chartDataUrl = '@Url.Action("tableJsonData", "Tables")';

        $('#displayTable').dataTable({
            dom: "<'row'<'col-sm-4'l><'col-sm-4 text-center'B><'col-sm-4'f>>tp",
            "order": [[0, "asc"]],
            responsive: true,
            buttons: [
                { extend: 'copy', className: 'btn-sm' },
                { extend: 'csv', title: 'Persons', className: 'btn-sm', exportOptions: { columns: 'th:not(:last-child)' } },
                { extend: 'pdf', title: 'Persons', className: 'btn-sm', exportOptions: { columns: 'th:not(:last-child)' } },
                { extend: 'print', className: 'btn-sm', exportOptions: { columns: 'th:not(:last-child)' } }
            ],

            columnDefs: [
                { "orderable": false, "targets": [4] },
                { "searchable": false, "targets": [1, 4] }
            ]
        });
    });
</script>
}
